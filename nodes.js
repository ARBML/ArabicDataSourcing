const url = "https://sheets.googleapis.com/v4/spreadsheets/1YO-Vl4DO-lnp8sQpFlcX1cDtzxFoVkCmU1PVw_ZHJDg?key=AIzaSyC6dSsmyQw-No2CJz7zuCrMGglNa3WwKHU&includeGridData=true";
function reformat_numbers(num) {
    if (num === undefined)
        return ''
    values = num.split(',')
    if (values.length < 2) {
        return num
    } else if (values.length == 2) {
        return values[0] + 'K'
    } else
        return values[0] + 'M'
}

function reformat_dialect(dialect)
{
    
    if (dialect.trim() != 'other')
    {
        dialect = dialect.split(':')[0]
        dialect = dialect.split('-')[1]
    }
    
    return dialect
}

function reformat_tasks(tasks)
{
    let out_html = ''

    tasks = tasks.split(',')
    for(let j = 0 ; j < tasks.length ; j += 1){
        out_html += tasks[j]+'</br>'
    }

    return out_html
}

function createHtml(i)
{
    let div = '<div style="font-family: Cairo, "Open Sans"> '
    let table = '<table style="border-collapse: collapse; border: none;">'
    let html_out = div + table 
    let list_to_show = ['Name', 'Year','Dialect', 'Volume', 'Tasks']
    for(let j = 0 ; j < list_to_show.length ; j += 1){

        let index_to_header = headersWhiteList.indexOf(list_to_show[j])
        let header = headersWhiteList[index_to_header]
        let value = ' ' +dataset[i][index_to_header]
        html_out += '<tr style="border: none;">'
        html_out += '<td style="border: none;">'
        html_out += '<b>'+header+'</b>'
        html_out += '</td>'
        html_out += '<td style="border: none;">'
        
        if(header == 'Volume')
        {
            html_out += reformat_numbers(value)+ ' '+ dataset[i][index_to_header+1]
        }
        else if (header == 'Name')
        {
            html_out += `<a href = "">${value}</a>`
        }
        else if (header == 'Dialect')
        {
            html_out += reformat_dialect(value)
        }
        else if (header == 'Tasks'){
            html_out += reformat_tasks(value)
        }
        else
        {
            html_out += value
        }
        
        html_out += '</td>'
        html_out += '</tr>'
    }

    return html_out+'</table>'+'</div>'
}
axios.get(url, ).then(function(response) {
    let rowData = response.data.sheets[0].data[0].rowData
    let headers = []
    headersWhiteList = ['Name', 'Link', 'License', 'Year', 'Language', 'Dialect', 'Domain', 'Form', 'Volume', 'Unit', 'Ethical Risks', 'Script', 'Access', 'Tasks', 'Venue Type']
    $('.loading-spinner').hide()
    
    // Grabbing header's index's to help us to get value's of just by header index 
    rowData[1].values.filter(header => header.formattedValue != undefined).forEach((header, headerIndex) => {
        if (headersWhiteList.includes(header.formattedValue)){
            headers.push({
                index: headerIndex,
                title: header.formattedValue
            })
        }
    })

    // console.log(headers)
    let tempRows = []
    rowData.filter(row => {
        tempRows.push(row.values)
    })
    
    // Grabbing row's values
    let rows = []
    for (let index = 2; index < tempRows.length; index++) {
        const fileds = tempRows[index]
        if (fileds != undefined) {
            // if (!isNaN(fileds[0].formattedValue)){
                rows.push(fileds)
            // }
        }
        
    }
    
        //  Createing table data
        dataset = []
        for (let index = 0; index < rows.length; index++) {
            const row = rows[index];
            let entry = {}
            if (isNaN(row[0].formattedValue))
            {
                continue
            }
            for (let index = 0; index < headersWhiteList.length; index++) {
                entry[index] = row[headers[index].index].formattedValue
            }
            dataset.push(entry)
        }
        console.log(dataset[0])
            var embeddings = {"columns":[0,1],"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"data":[[26.4973545074,13.338640213],[20.3378639221,32.510559082],[24.6556148529,28.2659492493],[16.1089344025,33.5175552368],[20.6532897949,34.1425704956],[20.7024402618,21.4699172974],[20.2354373932,23.6298351288],[20.7631797791,31.9551620483],[6.3872489929,30.9865608215],[23.4106426239,15.3172502518],[22.6490364075,9.4544858932],[25.325466156,12.3746681213],[20.2859477997,31.8865356445],[11.8551063538,26.52684021],[29.3919525146,12.3625249863],[17.6061515808,33.3838653564],[30.6824169159,11.3246154785],[13.062953949,31.0389862061],[18.72133255,31.5749664307],[21.2208175659,8.4401063919],[20.7502212524,2.1258811951],[5.8338775635,35.079536438],[20.9923744202,19.3509712219],[8.368350029,30.2822151184],[22.9018592834,28.8401126862],[21.0466365814,20.050951004],[17.4503707886,22.2205123901],[25.1059322357,2.5222930908],[23.1282691956,17.225025177],[31.5009708405,14.4394378662],[31.5007858276,14.4394645691],[30.5950374603,14.0265617371],[28.8085041046,13.7532863617],[30.5194358826,12.2781352997],[30.5956802368,14.0270824432],[20.9024944305,29.2157478333],[17.7925262451,30.2184524536],[26.116153717,10.449215889],[15.4697561264,12.798242569],[27.0575065613,13.4288539886],[24.6294670105,11.0839948654],[29.3246536255,15.0134735107],[22.7216243744,19.4637908936],[22.9302177429,23.4969387054],[27.4296875,13.8943967819],[19.1037750244,20.8792533875],[14.356836319,6.7445898056],[21.1998786926,9.7355604172],[19.7604808807,10.3986263275],[27.1360015869,28.4154434204],[27.2316169739,28.3922386169],[12.6823997498,21.6039772034],[5.5971727371,26.901725769],[24.1197872162,18.3171367645],[21.5685958862,19.5970497131],[25.2367782593,29.2537002563],[23.7332496643,10.0732316971],[33.2257270813,11.9085655212],[10.2380561829,25.5720672607],[24.653963089,24.5389919281],[10.0731344223,28.5076141357],[30.0729236603,7.8326187134],[12.4317989349,23.8678894043],[32.1336631775,18.4247913361],[22.3130683899,7.3769388199],[29.6296386719,7.2659912109],[25.2787208557,16.4153690338],[20.5349807739,28.8641471863],[25.5831336975,15.3107948303],[24.2273521423,19.3107967377],[12.2526550293,19.8649673462],[24.5308799744,24.5429344177],[17.100479126,28.0824890137],[29.3095264435,17.7445430756],[29.5463638306,7.085483551],[23.3252906799,17.0590076447],[19.788684845,30.6131362915],[6.4400148392,32.0659141541],[8.9865932465,27.4948387146],[9.8557701111,26.7352104187],[8.6494607925,24.5043849945],[27.0816993713,16.0746116638],[18.7220783234,31.5750923157],[16.3961849213,32.0137710571],[15.7474679947,31.8682117462],[25.1002655029,28.9445800781],[25.4903068542,11.5070648193],[31.7935676575,25.7119503021],[16.575717926,30.4278144836],[18.5924472809,33.1250762939],[32.0517654419,10.1635122299],[20.5746669769,2.3203811646],[20.1061058044,1.3361339569],[20.8059635162,30.9800052643],[23.4491939545,20.8258495331],[20.6104621887,23.050239563],[21.0009307861,24.0404605865],[17.1562290192,29.6506271362],[8.6309299469,34.5974731445],[26.442035675,20.4697628021],[27.4393043518,23.6249465942],[18.7721786499,30.2663650513],[18.7698173523,30.2665252686],[22.8758449554,20.7331027985],[34.0536689758,12.269659996],[19.0808143616,23.2566795349],[11.5396766663,27.7222881317],[18.8147182465,34.3377609253],[9.8557596207,26.7352905273],[24.251115799,14.3236598969],[32.3600997925,13.3915586472],[22.8681583405,2.4704322815],[20.9400558472,25.4160499573],[20.6264133453,18.1032962799],[22.3866939545,3.1361474991],[21.5756187439,18.2853775024],[28.0518989563,22.0849342346],[17.1437282562,9.3503646851],[17.1437282562,9.3503646851],[19.1669101715,0.0],[23.7435836792,3.3390522003],[18.4546756744,16.0425949097],[24.7892494202,3.8540248871],[31.9054069519,19.7039718628],[27.2408657074,11.672504425],[15.4571552277,12.0894899368],[24.4004936218,20.2150917053],[13.7689552307,22.2349262238],[15.901424408,30.8770637512],[16.1974239349,29.7383155823],[19.7359256744,24.3242263794],[22.901386261,28.8400688171],[18.1154060364,12.0137081146],[15.3400087357,28.0778617859],[15.3400087357,28.0778598785],[6.0250358582,31.7555389404],[28.6254653931,17.1077442169],[28.6858692169,6.2774419785],[11.8941869736,33.1397323608],[19.6659965515,8.7604045868],[17.6631317139,29.0700111389],[14.6765213013,29.9731311798],[12.5730762482,21.1974315643],[2.7765102386,16.4015159607],[24.2436103821,10.4933319092],[21.7934341431,6.2648124695],[20.2658462524,4.1661977768],[21.8080043793,4.7046117783],[21.7497272491,4.3811235428],[18.3605728149,16.7216796875],[23.2003593445,0.5748615265],[15.3406972885,5.3626842499],[20.3876686096,13.6908197403],[20.6350822449,13.6378707886],[4.6413726807,30.7684898376],[25.2127342224,16.0496826172],[12.3631830215,23.7886772156],[22.2469921112,18.7700061798],[19.7522907257,10.1893482208],[27.1674690247,22.5340957642],[28.6385002136,10.6030025482],[19.4653873444,18.961681366],[18.4582042694,27.4220027924],[7.1101560593,35.2297134399],[21.9202461243,10.788731575],[21.2759437561,13.8727369308],[21.4154815674,16.7569770813],[18.4701633453,29.3782043457],[25.5541057587,18.1224899292],[28.5999546051,11.8751735687],[26.4489822388,8.0148200989],[25.1113872528,20.6975498199],[8.1746492386,34.701587677],[26.4197406769,18.6577281952],[23.1488990784,4.8183765411],[35.4369735718,13.9437217712],[35.436920166,13.9446411133],[8.5289916992,24.5585231781],[24.5467758179,31.6682624817],[32.1386260986,10.4740190506],[12.5167636871,32.8107833862],[4.0799427032,28.6319007874],[23.7570533752,0.8331890106],[19.541437149,2.3219146729],[7.0416889191,32.7617492676],[27.9334945679,2.4093761444],[18.9258766174,27.7339286804],[18.3576126099,18.7602767944],[2.9664793015,17.8254585266],[33.4789237976,19.945148468],[19.0280075073,33.1050186157],[8.0124864578,30.8489074707],[32.7284812927,18.8176841736],[25.334564209,0.849615097],[13.3742284775,35.8897018433],[13.4058694839,35.8354644775],[15.3951892853,5.2810554504],[22.5492935181,23.7930870056],[24.4989719391,6.3270025253],[21.6105041504,0.7539291382],[3.606918335,16.7881183624],[3.7740039825,17.8232192993],[21.2215557098,16.6318531036],[14.395324707,6.738822937],[4.2157201767,16.4943256378],[2.5102977753,17.1009502411],[3.4616794586,16.0789852142],[4.2638978958,17.2917461395],[13.1642122269,31.1643333435],[9.0348720551,31.1839866638],[23.7470417023,11.8168525696],[8.1832208633,32.1056289673],[16.0558204651,25.9984931946],[24.4934196472,2.2423057556],[12.1867733002,30.7554740906],[10.5093278885,27.9103298187],[7.1253108978,31.0722560883],[6.038643837,28.6037902832],[8.4919776917,25.9666481018],[31.7940864563,25.5939006805],[9.0862464905,34.9125480652],[13.1666202545,22.9601764679],[17.1553001404,31.4272994995],[7.1969165802,31.629447937],[31.854183197,25.4281616211],[5.2412147522,28.1181716919],[12.8048477173,32.5625839233],[10.5256719589,27.9371128082],[22.7554798126,1.7328910828],[21.533744812,3.2108316422],[20.9701843262,5.937456131],[21.3708229065,7.0776910782],[17.1437282562,9.3503646851],[22.2644443512,2.149061203],[19.8749485016,7.7509841919],[3.2368516922,17.206319809],[23.8679885864,21.5682067871]]}
            var clusters = {"columns":[0],"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"data":[[1],[0],[7],[0],[0],[3],[3],[0],[2],[3],[4],[1],[0],[6],[8],[0],[8],[0],[0],[4],[9],[2],[3],[2],[7],[3],[3],[9],[3],[8],[8],[8],[8],[8],[8],[0],[0],[1],[4],[1],[1],[8],[3],[3],[1],[3],[4],[4],[4],[7],[7],[6],[2],[3],[3],[7],[1],[8],[6],[7],[2],[1],[6],[8],[4],[1],[3],[0],[1],[3],[6],[7],[0],[8],[1],[3],[0],[2],[6],[6],[6],[8],[0],[0],[0],[7],[1],[7],[0],[0],[8],[9],[9],[0],[3],[3],[3],[0],[2],[3],[7],[0],[0],[3],[8],[3],[6],[0],[6],[1],[8],[9],[3],[3],[9],[3],[7],[4],[4],[9],[9],[3],[9],[8],[1],[4],[3],[6],[0],[0],[3],[7],[4],[0],[0],[2],[8],[1],[2],[4],[0],[0],[6],[5],[1],[9],[9],[9],[9],[3],[9],[4],[4],[4],[2],[3],[6],[3],[4],[7],[1],[3],[0],[2],[4],[4],[3],[0],[3],[1],[1],[3],[2],[3],[9],[8],[8],[6],[7],[8],[2],[2],[9],[9],[2],[9],[0],[3],[5],[8],[0],[2],[8],[9],[0],[0],[4],[3],[9],[9],[5],[5],[3],[4],[5],[5],[5],[5],[0],[2],[1],[2],[6],[9],[2],[6],[2],[2],[6],[7],[2],[6],[0],[2],[7],[2],[2],[6],[9],[9],[9],[4],[4],[9],[4],[5],[3]]}
            let box = document.querySelector('.box');
            const width = box.offsetWidth;
            const height = 500;

            var svg = d3.select('svg');  
            var dimension = document.body
                .getBoundingClientRect();
            
            var tooltip = d3.select("body")
            .append("div")
            .style("position", "absolute")
            .style("background-color", "white")
            .style("border", "solid")
            .style("border-width", "1px")
            .style("border-radius", "5px")
            .style("padding", "10px")
            .style("z-index", "10")
            .style("visibility", "hidden")
            ;

            var data = d3.range(0, 220).map(function (d) {
                return {
                x: embeddings['data'][d][1],
                y: embeddings['data'][d][0]
              }
            });

            var x = d3.scaleLinear()
            .domain([-3, 40])
            .range([ 0, width ]);

            // Add Y axis
            var y = d3.scaleLinear()
                .domain([0, 40])
                .range([ height, 0]);

            
            var zoom = d3.zoom()
                .scaleExtent([.5, 10])  // This control how much you can unzoom (x0.5) and zoom (x20)
                .extent([[0, 0], [width, height]])
                .on("zoom", updateChart);
          
            var svg = d3.select("svg")
                .attr('width', width)
                .attr('height', height)
                .attr("style", "outline: thin solid gray;")
                .call(zoom)                       // Adds zoom functionality

            var canvas = svg
                .append("g")
                .attr("class", "zoomable")
            
              function updateChart() {
                if (canvas) {
                    canvas.attr("transform", d3.event.transform);
                    // recover the new scale
                    var newX = d3.event.transform.rescaleX(x);
                    var newY = d3.event.transform.rescaleY(y);
                
                
                    // update circle position
                    canvas.selectAll("circle")
                        .attr('cx', function(d) {return newX(d.x)})
                        .attr('cy', function(d) {return newY(d.y)});
                }
              }

            canvas.selectAll('circle')
                .data(data)
                .enter()
                .append('circle')
                .attr("r", function(_, i, n){
                    let vol_index = headersWhiteList.indexOf('Volume')
                    if(dataset[i][vol_index] === undefined)
                        return 10
                    let volume = parseInt(dataset[i][vol_index].replaceAll(",",""))
                    return Math.log(volume)
                }) 
                .attr('opacity', 0.7)
                .attr('cx', function(d) {
                    return x(d.x);})
                .attr('cy', function(d) {
                    return y(d.y)})
                .style('fill', function(_, i, n) {
                    const index = clusters['data'][i][0]
                    return d3.schemeCategory10[index]
                }).on("mouseover", function(_, i, n){                    
                    tooltip = tooltip.html(createHtml(i));
                    d3.select(this).style('stroke', '#eaeaea')
                    d3.select(this).style('stroke-width', '5')
                    return tooltip.style("visibility", "visible");
                })
                .on("mousemove", function(){return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");})
                .on("mouseout", function(){
                    d3.select(this).style('stroke', 'white')
                    d3.select(this).style('stroke-width', '0')
                    return tooltip.style("visibility", "hidden");
                })
                .on("click", function(_, i, n){
                    let url = 'card.html?'+i;
                    window.open(url, '_blank').focus();
                });


    })
    .catch(function(error) {
        console.log(error);
    });

            
